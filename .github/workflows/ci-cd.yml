name: CI/CD Pipeline
on:
  push:
    branches: [ main ]

env:
  REGISTRY: docker.io
  IMAGE_NAME: ivan11sa/proyecto-php-nginx
  IMAGE_NAME_NGINX: ivan11sa/proyecto-php-nginx   # o tu imagen distinta de nginx-balancer
  K8S_NS: webapp                    

jobs:
  build:
    runs-on: self-hosted
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & push PHP image
        run: |
          TAG=${GITHUB_SHA::7}
          docker build -t $REGISTRY/$IMAGE_NAME:php-$TAG -f Dockerfile.php .
          docker push $REGISTRY/$IMAGE_NAME:php-$TAG
          echo "PHP_TAG=$TAG" >> image_tag.env

      - name: Build & push Nginx image
        run: |
          TAG=${GITHUB_SHA::7}
          docker build -t $REGISTRY/$IMAGE_NAME:nginx-$TAG -f Dockerfile.nginx .
          docker push $REGISTRY/$IMAGE_NAME:nginx-$TAG
          echo "NGINX_TAG=$TAG" >> image_tag.env

      - name: Upload image tags
        uses: actions/upload-artifact@v4
        with:
          name: image_tags
          path: image_tag.env

  deploy:
    runs-on: self-hosted
    needs: build

    steps:
      - name: Download image tags
        uses: actions/download-artifact@v4
        with:
          name: image_tags
          path: .

      - name: Setup kubectl
        uses: azure/setup-kubectl@v3

      - name: Configure kubeconfig
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.K8S_CONFIG }}" | base64 -d > $HOME/.kube/config

      - name: Load tags into env
        run: |
          source image_tag.env
          echo "PHP_TAG=$PHP_TAG"
          echo "NGINX_TAG=$NGINX_TAG"

      - name: Rolling update on Kubernetes
        run: |
          # Actualiza la imagen del Deployment php-deployment
          kubectl -n $K8S_NS set image deployment/php-deployment \
            php-fpm=$REGISTRY/$IMAGE_NAME:php-$PHP_TAG \
            --record

          # Actualiza la imagen del Deployment nginx-balancer
          kubectl -n $K8S_NS set image deployment/nginx-balancer \
            nginx=$REGISTRY/$IMAGE_NAME:nginx-$NGINX_TAG \
            --record

          # Espera a que terminen los rolling updates
          kubectl -n $K8S_NS rollout status deployment/php-deployment --timeout=3m
          kubectl -n $K8S_NS rollout status deployment/nginx-balancer --timeout=3m

      - name: Rollback if rollout fails
        if: failure()
        run: |
          echo "‚ùå Rollout failed. Undoing..."
          kubectl -n $K8S_NS rollout undo deployment/php-deployment
          kubectl -n $K8S_NS rollout undo deployment/nginx-balancer
